name: Build Windows Executables

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        python-version: [3.8]
        architecture: [x86, x64]
        include:
          - architecture: x86
            python-arch: 32
            artifact-name: QuickMemo-win32
          - architecture: x64
            python-arch: 64
            artifact-name: QuickMemo-win64

    runs-on: windows-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.architecture }}
    
    - name: Install dependencies
      shell: pwsh
      run: |
        python -m pip install --upgrade pip
        # Install PyQt6 using pre-built wheels
        pip install --only-binary :all: PyQt6>=6.4.0
        # Install other dependencies
        pip install -r requirements.txt
    
    - name: Create assets directory
      shell: pwsh
      run: |
        if (!(Test-Path -Path "assets")) {
            New-Item -ItemType Directory -Path "assets"
        }
    
    - name: Create placeholder icon
      shell: pwsh
      run: |
        $iconContent = [Convert]::FromBase64String("iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAAAdgAAAHYBTnsmCAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAB8SURBVDiNY2AYBYMRMDIyMjAyMjL8//+f4f///wz//v1j+P//P8P///8Z/v//z/D//3+G////M/z//5/h////DP///2f4//8/w////xn+////H4gZGBgYGBkZGRgZGRkYGRkZGBkZGRgZGRkYGRkZGBkZGRgZGRkYGRkZGBkZGRgBANQcD0XqXhQAAAAASUVORK5CYII=")
        [System.IO.File]::WriteAllBytes("assets/icon.ico", $iconContent)
    
    - name: Build executable
      shell: pwsh
      run: |
        # Build with Nuitka
        python -m nuitka --standalone --windows-disable-console --windows-icon-from-ico=assets/icon.ico --include-package=PyQt6 --include-package=keyboard --include-package=pynput --include-package=python-dotenv --output-dir=dist src/main.py
        if ($LASTEXITCODE -ne 0) {
            Write-Error "Nuitka build failed"
            exit 1
        }
    
    - name: Create release archive
      shell: pwsh
      run: |
        if (!(Test-Path -Path "dist")) {
            Write-Error "dist directory not found"
            exit 1
        }
        cd dist
        if (!(Test-Path -Path "main.dist")) {
            Write-Error "main.dist directory not found"
            exit 1
        }
        # Rename the executable
        Rename-Item -Path "main.dist/main.exe" -NewName "QuickMemo.exe" -Force
        # Create ZIP archive
        7z a -tzip ../${{ matrix.artifact-name }}.zip main.dist/*
        if ($LASTEXITCODE -ne 0) {
            Write-Error "Failed to create ZIP archive"
            exit 1
        }
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact-name }}
        path: ${{ matrix.artifact-name }}.zip
        retention-days: 5
        if-no-files-found: error 