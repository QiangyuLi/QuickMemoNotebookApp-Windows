name: Build QuickMemo

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.8]
        qt-framework: [pyqt5, pyside5]
        builder: [nuitka, pyinstaller]
        architecture: [x86, x64]

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.architecture }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ "${{ matrix.qt-framework }}" = "pyqt5" ]; then
          pip install -r requirements.txt
        else
          pip install -r requirements-pyside5.txt
        fi
    
    - name: Build with Nuitka
      if: matrix.builder == 'nuitka'
      run: |
        python -m nuitka --standalone --windows-disable-console --include-package=PyQt5 --include-package=PySide5 --output-dir=build/nuitka src/main.py
        cd build/nuitka
        7z a -tzip ../../QuickMemo-${{ matrix.qt-framework }}-${{ matrix.architecture }}-nuitka.zip *
      continue-on-error: true
    
    - name: Build with PyInstaller
      if: matrix.builder == 'pyinstaller'
      run: |
        if [ "${{ matrix.qt-framework }}" = "pyqt5" ]; then
          pyinstaller quickmemo.spec
        else
          pyinstaller quickmemo-pyside5.spec
        fi
        cd dist
        7z a -tzip ../../QuickMemo-${{ matrix.qt-framework }}-${{ matrix.architecture }}-pyinstaller.zip *
      continue-on-error: true
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: QuickMemo-${{ matrix.qt-framework }}-${{ matrix.architecture }}-${{ matrix.builder }}
        path: QuickMemo-${{ matrix.qt-framework }}-${{ matrix.architecture }}-${{ matrix.builder }}.zip 